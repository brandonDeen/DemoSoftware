<?xml version="1.0"?>
<doc>
    <assembly>
        <name>tagVisualizationTest</name>
    </assembly>
    <members>
        <member name="T:demoSoftware.Deck">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.Deck.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.Deck.setDeck">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.Deck.getDeck">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Deck.getShuffledDeck">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Deck.toString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:demoSoftware.MainWindow">
            <summary>
            Interaction logic for SurfaceWindow1.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:demoSoftware.MainWindow.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:demoSoftware.MainWindow.OnClosed(System.EventArgs)">
            <summary>
            Occurs when the window is about to close. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:demoSoftware.MainWindow.AddWindowAvailabilityHandlers">
            <summary>
            Adds handlers for window availability events.
            </summary>
        </member>
        <member name="M:demoSoftware.MainWindow.RemoveWindowAvailabilityHandlers">
            <summary>
            Removes handlers for window availability events.
            </summary>
        </member>
        <member name="M:demoSoftware.MainWindow.OnWindowInteractive(System.Object,System.EventArgs)">
            <summary>
            This is called when the user can interact with the application's window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:demoSoftware.MainWindow.OnWindowNoninteractive(System.Object,System.EventArgs)">
            <summary>
            This is called when the user can see but not interact with the application's window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:demoSoftware.MainWindow.OnWindowUnavailable(System.Object,System.EventArgs)">
            <summary>
            This is called when the application's window is not visible or interactive.
            </summary>
            <param name="sender">object sender</param>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:demoSoftware.MainWindow.OnVisualizationAdded(System.Object,Microsoft.Surface.Presentation.Controls.TagVisualizerEventArgs)">
            <summary>
            This function recognises tag, and gets relative x and y axis. It also gets orientation of the tag.
            </summary>
            <param name="sender">object sender</param>
            <param name="e">TagVisualizerEvent Arguments</param>
        </member>
        <member name="M:demoSoftware.MainWindow.constructBin(System.Collections.Generic.List{System.Windows.Input.TouchPoint})">
            <summary>
            
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.MainWindow.GetBytesFromBinaryString(System.String)">
            <summary>
            
            </summary>
            <param name="binary"></param>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.MainWindow.drawboxes(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x1Axis"></param>
            <param name="y1Axis"></param>
            <param name="angle"></param>
        </member>
        <member name="M:demoSoftware.MainWindow.transferStringBuilder(System.String)">
            <summary>
            This method builds the transfer String with addition null characters between each transfer character.
            </summary>
            <param name="transferString">string to transfer</param>
            <returns>string including null characters in between</returns>
        </member>
        <member name="M:demoSoftware.MainWindow.ConvertToBinary(System.Char)">
            <summary>
            This method converts character to binary string
            </summary>
            <param name="asciiString">ascii character</param>
            <returns>binary string</returns>
        </member>
        <member name="M:demoSoftware.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:demoSoftware.GameController">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.GameController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.GameController.setDealer(demoSoftware.Player)">
            <summary>
            
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:demoSoftware.GameController.setDefaultPlayer">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.GameController.setPot(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.GameController.setDeck(demoSoftware.Deck)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.GameController.play">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.GameController.hit(demoSoftware.Player)">
            <summary>
            
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:demoSoftware.GameController.deal">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.GameController.getBet">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.GameController.startPlaying">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.GameController.gameOverState">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:demoSoftware.LynxTagVisualization">
            <summary>
            Interaction logic for TagVisualization1.xaml
            </summary>
            <summary>
            LynxTagVisualization
            </summary>
        </member>
        <member name="M:demoSoftware.LynxTagVisualization.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:demoSoftware.LynxTagVisualization.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:demoSoftware.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:demoSoftware.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:demoSoftware.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:demoSoftware.Card">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.Card.#ctor(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="f"></param>
            <param name="s"></param>
        </member>
        <member name="M:demoSoftware.Card.getValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Card.getFace">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Card.getSuit">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Card.setValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Card.setFace(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Card.setSuit(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Card.toString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:demoSoftware.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:demoSoftware.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:demoSoftware.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:demoSoftware.Player">
            <summary>
            
            </summary>
        </member>
        <member name="M:demoSoftware.Player.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="wallet"></param>
            <param name="id"></param>
        </member>
        <member name="M:demoSoftware.Player.setWallet(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Player.setID(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Player.setScore(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Player.setHand(System.Collections.Generic.List{demoSoftware.Card})">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:demoSoftware.Player.getWallet">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Player.getID">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Player.getScore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Player.getHand">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Player.handString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:demoSoftware.Player.toString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
